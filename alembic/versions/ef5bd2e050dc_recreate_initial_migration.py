"""Recreate initial migration

Revision ID: ef5bd2e050dc
Revises: 70165a1d2ec3
Create Date: 2025-05-05 15:10:03.816514

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ef5bd2e050dc'
down_revision: Union[str, None] = '70165a1d2ec3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_spend_logs_id', table_name='spend_logs')
    op.drop_table('spend_logs')
    op.drop_index('ix_campaigns_id', table_name='campaigns')
    op.drop_index('ix_campaigns_name', table_name='campaigns')
    op.drop_table('campaigns')
    op.drop_index('ix_brands_id', table_name='brands')
    op.drop_index('ix_brands_name', table_name='brands')
    op.drop_table('brands')
    op.drop_table('budgets')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('budgets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('daily_budget', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('monthly_budget', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='budgets_brand_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='budgets_pkey')
    )
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('brands_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='brands_pkey'),
    sa.UniqueConstraint('name', name='brands_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_brands_name', 'brands', ['name'], unique=True)
    op.create_index('ix_brands_id', 'brands', ['id'], unique=False)
    op.create_table('campaigns',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='campaigns_brand_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='campaigns_pkey')
    )
    op.create_index('ix_campaigns_name', 'campaigns', ['name'], unique=False)
    op.create_index('ix_campaigns_id', 'campaigns', ['id'], unique=False)
    op.create_table('spend_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount_spent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='spend_logs_brand_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='spend_logs_pkey')
    )
    op.create_index('ix_spend_logs_id', 'spend_logs', ['id'], unique=False)
    # ### end Alembic commands ###
